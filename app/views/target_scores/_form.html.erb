<%= form_with(model: target_score, remote: true, format: :json, id: "target_form") do |form| %>
  <% if target_score.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(target_score.errors.count, "error") %> prohibited this target_score from being saved:</h2>

      <ul>
        <% target_score.errors.full_messages.each do |message| %>
          <li><%= message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <div class="field">
    <%= form.label :student_id %>
    <%= form.select :student_id, @students.all.map {|student| ["#{student.name}", student.id]}, include_blank: "選択して下さい" %>
  </div>

  <div class="field">
    <%= form.label :math %>
    <%= form.number_field :math %>
  </div>

  <div class="field">
    <%= form.label :english %>
    <%= form.number_field :english %>
  </div>

  <div class="field">
    <%= form.label :science %>
    <%= form.number_field :science %>
  </div>

  <div class="actions">
    <%= submit_tag "送信", "data-disable-with" => "送信中...", id: 'post_button' %>
  </div>
<% end %>

<div id="response"></div>

<script>
  $(function() {
    $("form").submit(function(e) {               //イベント内容をeに格納
      console.log(e.cancelable);                 //イベントがキャンセル可能か確認
      e.preventDefault();                        //イベントキャンセル  =>  キャンセル
      e.stopPropagation();                        //イベントキャンセル =>  イベントのバブリングを停止する
      // $("#post_button").prop('disabled', true);  //送信ボタンを1度押したら非活性化
      const formData = new FormData(e.target);
      const url = $(e.target).attr("action");
      for (let value of formData.entries()) {    //formDataの内容確認
        console.log(value);
      }

      $.ajax({                                   //Ajax通信を行う
        url: url,
        type: "POST",
        dataType: "json",
        data: formData,
        processData: false,
        contentType: false
      })
      .done(function(data) {
        alert('done');
        // console.log(url)                      // 以下3つ送信内容等確認
        // console.log(e.target)
        // console.log(e)
      })
      .fail(function(data) {
        alert("fail");                           //リクエスト失敗の通知
        console.log("エラー:" + data.status);     //エラーステータス
        // alert(data.responseText);             //バリデーションエラー内容
      })
      .always(function(data) {
        console.log(JSON.stringify(data));      //成功時: インスタンス  失敗時: バリデーションエラー内容
        $("#response").empty()                  //タグの内容を空にする
        $("#response").append(JSON.stringify(data)); //タグにdataを表示する
      });
    });
  });
</script>