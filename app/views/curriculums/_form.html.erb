<%= form_with(model: curriculum, local: true) do |form| %>
  <% if curriculum.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(curriculum.errors.count, "error") %> prohibited this curriculum from being saved:</h2>

      <ul>
        <% curriculum.errors.full_messages.each do |message| %>
          <li><%= message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <div class="field">
    <%= form.label :student_id %>
    <%= form.select :student_id, @students.all.map {|student| ["#{student.name}", student.id]}, include_blank: "選択して下さい" %>
  </div>

  <div class="field">
    <%= form.label :math %>
    <%= form.number_field :math %>
  </div>

  <div class="field">
    <%= form.label :english %>
    <%= form.number_field :english %>
  </div>

  <div class="field">
    <%= form.label :science %>
    <%= form.number_field :science %>
  </div>

  <div class="field">
    <%= form.label :total_score %>
    <%= form.number_field :total_score %>
  </div>

  <div class="field">
    <%= form.label :average_score %>
    <%= form.number_field :average_score, min: '0.1' ,step: '0.1' %>
  </div>

  <div class="field">
    <%= form.label :grade %>
    <%= form.select :grade, Curriculum.grades.keys, include_blank: "選択して下さい" %>
  </div>

  <div class="field">
    <%= form.label :remarks %>
    <%= form.text_field :remarks %>
  </div>

  <p><h3>ダブルチェック</h3></p>
  <hr>
  <%= form.fields_for :double_checks do |d| %>
    <div id="form_area">
      <div class='double_check_component', id="double_check_form1">
        <div class="field"><%= d.label :teacher_name %></div>
        <div class="field"><%= d.text_field :teacher_name %></div>
        <div class="check_box_container field">
          <%= d.label :check, "yes" %><%= d.radio_button :check, :yes %>
          <%= d.label :check, "no" %><%= d.radio_button :check, :no %>
        </div>
        <div class="field"><%= d.label :comment %></div>
        <div class="field"><%= d.text_field :comment %></div>
        <div>ダブルチェック削除<%= d.check_box :_destroy %></div>
        <%= d.hidden_field :curriculum_id, value: @curriculum.id %>
        <hr>
      </div>
    </div>
  <% end %>

  <div class="actions">
    <%= form.submit %>
  </div>
<% end %>

<p><button id='add_form' >フォームの追加</button></p>
<p><button id='reduce_form' style="display: none;" >フォームの削除</button></p>

<script>
  $(function() {
    // 科目計算ここから
    // 各得点入力時にcalculate_judgement関数を呼び出す
    $('#curriculum_math').on('input', function(e) {
      calculate_judgement();
    });
    $('#curriculum_english').on('input', function(e) {
      calculate_judgement();
    });
    $('#curriculum_science').on('input', function(e) {
      calculate_judgement();
    });
    // 得点入力フォームが全て埋まっていれば、以降のフォームが自動で埋まるように各関数を呼び出す
    function calculate_judgement() {
      math = Number($('#curriculum_math').val());
      english = Number($('#curriculum_english').val());
      science = Number($('#curriculum_science').val());
      if ((math >= 1 && math <= 100) && (english >= 1 && english <= 100) && (science >= 1 && science <= 100 )) {
        total_score_calculate();
        average_score_calculate();
        grade_judge();
        remarks_common_phrase();
      };
    };
    // 合計点を計算してフォームに入力する
    function total_score_calculate() {
      total_score = math + english + science;
      $('#curriculum_total_score').val(total_score);
    };
    // 平均点を計算してフォームに入力する
    function average_score_calculate() {
      average_score = ((math + english + science) / 3).toFixed(1);
      $('#curriculum_average_score').val(average_score);
    };
    // 個別の得点で赤点がないか確認し、その後成績判定を行う
    function grade_judge() {
      subjects = [math, english, science];
      for (i=0; i<subjects.length; i++) {
        if (subjects[i] < 40) {
          grade = "D";
          $('#curriculum_grade').val(grade);
          return
        }
      }
      if (average_score >= 80) {
        grade = "A";
      } else if (average_score >= 60) {
        grade = "B";
      } else if (average_score >= 40) {
        grade = "C";
      } else {
        grade = "D";
      }
      $('#curriculum_grade').val(grade);
    };
    // 成績を元に備考欄にコメントを記述する
    function remarks_common_phrase() {
      switch (grade) {
        case "A": common_phrase="素晴らしい"; break;
        case "B": common_phrase="良いですね"; break;
        case "C": common_phrase="努力が必要です"; break;
        case "D": common_phrase="赤点です"; break;
        default : common_phrase=""; break;
      };
      $('#curriculum_remarks').val(common_phrase);
    };
    // 科目計算ここまで

    // 動的フォーム追加ここから
    // 追加するフォームのhtmlを返す関数
    function buildForm(formIndex) {
      let html = `
        <div class="double_check_component", id="double_check_form${formIndex}">
          <div class="field"><label for="curriculum_double_checks_attributes_${formIndex}_teacher_name">Teacher name</label></div>
          <div class="field"><input type="text" name="curriculum[double_checks_attributes][${formIndex}][teacher_name]" id="curriculum_double_checks_attributes_0_teacher_name"></div>
          <div class="check_box_container field">
            <label for="curriculum_double_checks_attributes_${formIndex}_check">yes</label><input type="radio" value="yes" name="curriculum[double_checks_attributes][${formIndex}][check]" id="curriculum_double_checks_attributes_${formIndex}_check_yes">
            <label for="curriculum_double_checks_attributes_${formIndex}_check">no</label><input type="radio" value="no" name="curriculum[double_checks_attributes][${formIndex}][check]" id="curriculum_double_checks_attributes_${formIndex}_check_no">
          </div>
          <div class="field"><label for="curriculum_double_checks_attributes_${formIndex}_comment">Comment</label></div>
          <div class="field"><input type="text" name="curriculum[double_checks_attributes][${formIndex}][comment]" id="curriculum_double_checks_attributes_${formIndex}_comment"></div>
        </div>`;
      console.log(html);
      return html;
    };
    // フォームが5個以下であれば新たなフォームを追加する
    $("#add_form").click(function() {
      let form_area = $("#form_area");
      let formIndex = $('.double_check_component').length;
      formIndex += 1;
      form_area.append(buildForm(formIndex));
      $("#reduce_form").css("display","block");
      if (formIndex > 4) {
        $("#add_form").css("display","none");
      };
    });
    // 最後に追加したフォームを削除する
    $("#reduce_form").click(function() {
      let formIndex = $('.double_check_component').length;
      if (formIndex > 1) {
        $('.double_check_component:last').remove();
        formIndex -= 1;
        if (formIndex < 2) {
          $("#reduce_form").css("display","none");
        };;
      }
    });
  });
</script>